<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter type="string" key="webhooks.queue">webhooks</parameter>
        <parameter type="collection" key="strategies.map">
            <parameter type="string" key="exponential">Webhook\Domain\Infrastructure\Strategy\ExponentialStrategy</parameter>
            <parameter type="string" key="linear">Webhook\Domain\Infrastructure\Strategy\LinearStrategy</parameter>
        </parameter>
    </parameters>
    <services>
        <service id="webhook.handler" class="Webhook\Domain\Infrastructure\Handler"/>
        <service id="webhook.retry.handler" class="Webhook\Bundle\Service\RetryHandler">
            <argument type="service" id="enqueue.client.producer"/>
        </service>

        <service id="amqp.producer" class="Webhook\Bundle\Service\WebhookProducer">
            <argument type="service" id="enqueue.client.producer"/>
        </service>

        <service id="webhook.repository" class="Webhook\Bundle\Repository\WebhookRepository">
            <argument type="service" id="doctrine.orm.entity_manager"/>
        </service>

        <service id="webhooks.consumer" class="Webhook\Bundle\Service\WebhookConsumer">
            <argument type="service" id="webhook.handler"/>
            <argument type="service" id="webhook.repository"/>
            <argument type="service" id="event_dispatcher"/>
        </service>

        <service id="webhook_bundle.event_listener.webhook_retry_listener" class="Webhook\Bundle\EventListener\WebhookRetryListener">
            <argument id="webhook.retry.handler" type="service"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="webhook_bundle.event_listener.webhook_callback_listener" class="Webhook\Bundle\EventListener\WebhookCallbackListener">
            <tag name="kernel.event_subscriber"/>
        </service>

    </services>
</container>